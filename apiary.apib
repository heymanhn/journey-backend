FORMAT: 1A
HOST: http://journeyapp.no-domain-yet.com/v1

# Journey

Journey helps you organize your trips, allowing you to maximize your experiences at every destination you visit and to relive those moments when you return home.

The Journey API allows consumers to access and create trips, which contain lists of places users want to go for their destinations.



## Authentication [/login]

Journey uses JSON Web Tokens for the API server's authentication. This means the server does not maintain sessions for each connection. Once the server authenticates a client and provides a JSON Web Token, all subsequent API requests (except for user account creation) need to include that token in the HTTP `Authorization` header.


### Login [POST]

Log in with either a username or email, as well as the password. The API returns the user object and a JSON Web Token if authentication is successful.

+ Request (application/json)

        {
            "username": "amy",
            "password": "abc123"
        }

+ Response 200 (application/json)

        {
            "user": {
                "_id": "57733624ed070136a557dddd",
                "username": "amy",
                "email": "amy@journey.com",
                "name": "Amy Doe",
                "__v": 0,
                "signupDate": "2016-06-29T02:44:52.928Z"
            },
            "token": "JWT <JWT_TOKEN>"
        }



## User Management [/users]

### User Sign Up [POST]

Create a new user account. Requires user to provide a username, email, and password. Optionally, user can provide a full name.

The API returns the user object and a JSON Web Token if account creation is successful, meaning that the user will already be logged in.

+ Request (application/json)

        {
            "username": "amy",
            "email": "amy@journey.com",
            "password": "abc123",
            "name": "Amy Doe"
        }

+ Response 200 (application/json)

        {
            "user": {
                "_id": "57733624ed070136a557dddd",
                "username": "amy",
                "email": "amy@journey.com",
                "name": "Amy Doe",
                "__v": 0,
                "signupDate": "2016-07-27T02:44:52.928Z"
            },
            "token": "JWT <JWT_TOKEN>"
        }


### Get User Information [GET /users/{userId}]

Retrieve information about a user. Only allowed on currently authenticated user.

+ Parameters
    + userId (string) - User ID to fetch information for.

+ Response 200 (application/json)

        {
            "user": {
                "_id": "57733624ed070136a557dddd",
                "username": "amy",
                "email": "amy@journey.com",
                "name": "Amy Doe",
                "__v": 0,
                "signupDate": "2016-07-27T02:44:52.928Z"
            }
        }


### Update User Information [PUT /users/{userId}]

Updates the user. Only allowed on currently authenticated user.

+ Parameters
    + userId (string) - User ID to update information for.

+ Request (application/json)

        {
            "email": "amy.doe@journey.com",
            "name": "Amy Emily Doe"
        }

+ Response 200 (application/json)

        {
            "user": {
                "_id": "57733624ed070136a557dddd",
                "username": "amy",
                "email": "amy.doe@journey.com",
                "name": "Amy Emily Doe",
                "__v": 0,
                "signupDate": "2016-07-27T02:44:52.928Z"
            }
        }


### Get User's trips [GET /users/{userId}/trips?page={page}]

Get all the trips created by the currently authenticated user, in reverse chronological order. Only a subset of each trip object is returned in this route. To get full details about the trip, use GET /trips/{tripId}.

+ Parameters
    + userId (string) - User ID to get entries for.
    + page (number) - Page # to return based on every page of 10 trips.

+ Response 200 (application/json)

        {
            "page": 1,
            "results": 2,
            "trips": [
                {
                    "_id": "578edda250b26fc5d3c6baa8",
                    "creator": "5785e22fdff4328371f8e781",
                    "date": "2016-07-27T23:01:05.404Z",
                    "title": "Paris and Marseille",
                    "startDate": "2016-08-15"
                    "endDate": "2016-08-20",
                    "destinations": [],
                    "ideas": [],
                    "plan": [],
                    "visibility": "private"
                },
                {
                    "_id": "578edda250b26fc5d3c6baa9",
                    "creator": "5785e22fdff4328371f8e781",
                    "date": "2016-07-28T11:24:55.404Z",
                    "title": "Amy and Adam Take Vietnam!",
                    "startDate": "2016-09-22"
                    "endDate": "2016-09-27",
                    "destinations": [],
                    "ideas": [],
                    "plan": [],
                    "visibility": "public"
                }
            ]
        }


### Get User's entries [GET /users/{userId}/entries?count={count}&page={page}&maxDate={maxDate}]

Get all journey entries created by the currently authenticated user, in reverse chronological order.

+ Parameters
    + userId (string) - User ID to get entries for.
    + count (number) - Number of items to return. Default is 20
    + page (number) - Page # to return based on the count per page.
    + maxDate (string) - Cut-off date for first entry to return, in ISODate format

+ Response 200 (application/json)

        {
            "page": 1,
            "results": 2,
            "entries": [
                {
                    "_id": "578ede2a50b26fc5d3c6baaa",
                    "creator": "5785e22fdff4328371f8e781",
                    "type": "video",
                    "message": "And here's a video showing him scooting around",
                    "contents": "https://s3-us-west-1.amazonaws.com/journey.media/4daba8e3-78c4-4ef2-b187-06b9d97b3228",
                    "__v": 0,
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            -122.431301,
                            37.773233
                        ]
                    },
                    "date": "2016-07-20T02:12:58.332Z"
                },
                {
                    "_id": "578edda250b26fc5d3c6baa8",
                    "creator": "5785e22fdff4328371f8e781",
                    "type": "photo",
                    "message": "Check out this cute picture of Mochi!",
                    "contents": "https://s3-us-west-1.amazonaws.com/journey.media/e7b5b426-0d6b-4325-9d4e-8d2ba6fc8502",
                    "__v": 0,
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            -122.431301,
                            37.773224
                        ]
                    },
                    "date": "2016-07-20T02:10:42.442Z"
                }
            ]
        }



## Trip Management [/trips]

Users can create and manage trips on the Journey app. Each trip specifies a list of destinations that the user is visiting, as well as a list of places the user wants to visit (ideas) and a concrete trip plan to execute.

Each trip includes the following properties:

* `_id` - Mongo ID
* `date` - Date created
* `creator` - User who created the trip
* `title`
* `destinations` - A list of cities/countries/continents the user will be visiting
* `ideas` - A list of places the user wants to visit
* `plan` - A day-by-day itinerary for the trip, composed of places the user has decided to visit
* `visibility` - whether or not the trip is publicly visible


### Create a trip [POST]

Creates a new trip. Only `title` is required during creation, and the user can only specify `title`, `startDate`, `endDate`, and `destinations` during trip creation. Returns the newly created trip upon success.

+ Request (application/json)

        {
            "title": "Paris and Marseille",
            "startDate": "2016-08-15"
            "endDate": "2016-08-20",
            "visibility": "private"
        }

+ Response 302 (application/json)

        {
            "trips": [
                {
                    "_id": "578edda250b26fc5d3c6baa8",
                    "creator": "5785e22fdff4328371f8e781",
                    "date": "2016-07-25T15:58:32.404Z",
                    "title": "Paris and Marseille",
                    "startDate": "2016-08-15"
                    "endDate": "2016-08-20",
                    "destinations": [],
                    "ideas": [],
                    "plan": [],
                    "visibility": "private"
               }
            ]
        }


### Get a trip [GET /trips/{tripId}]

Gets details about a particular trip created by the currently authenticated user. Returns the full details about the trip.

+ Parameters
    + tripId (string) - Trip ID to get details for.

+ Response 200 (application/json)

        {
            "trip": {
                "_id": "578edda250b26fc5d3c6baa8",
                "creator": "5785e22fdff4328371f8e781",
                "date": "2016-07-25T15:58:32.404Z",
                "title": "Paris and Marseille",
                "startDate": "2016-08-15"
                "endDate": "2016-08-20",
                "destinations": [
                    "Paris, France",
                    "Marseille, France"
                ],
                "ideas": [],
                "plan": [],
                "visibility": "private"
            }
        }


### Update a trip [PUT /trips/{tripId}]

Updates the trip. Only allowed on trips created by currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID to update.

+ Request (application/json)

        {
            "title": "Amy goes to Paris and Marseille",
            "startDate": "2016-08-12",
            "destinations": [
                "Paris, France",
                "Marseille, France",
                "Nice, France"
            ]
        }

+ Response 200 (application/json)

        {
            "trip": {
                "_id": "578edda250b26fc5d3c6baa8",
                "creator": "5785e22fdff4328371f8e781",
                "date": "2016-07-25T15:58:32.404Z",
                "title": "Amy goes to Paris and Marseille",
                "startDate": "2016-08-12"
                "endDate": "2016-08-20",
                "destinations": [],
                "ideas": [],
                "plan": [],
                "visibility": "private"
            }
        }


### Delete a trip [DELETE /trips/{tripId}]

Deletes the trip. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID to delete.

+ Response 200 (application/json)

        {
            "message": "Trip deleted."
        }


## Trip Destinations [/trips/{tripId}/destinations]

Each trip contains a list of destinations. The purpose of keeping this list is to help visualize where users are visiting on the map, even before ideas or plans are set.


### Add a trip destination [POST]

Adds a destination to the trip. Only allowed on trips created by the currently authenticated user.

+ Request (application/json)

        {
            "googlePlaceId": "ChIJm7oRy-tVZDURS9uIugCbJJE",
            "name": "South Korea",
            "loc": {
                "type": "Point",
                "coordinates": [
                    151.2125697,
                    -33.8487927
                ]
            },
            "types": [
                "country"
            ]
        }

+ Response 200 (application/json)

        {
            "destinations": [
                {
                    "_id": "579e7853181f58d5412ab908",
                    "googlePlaceId": "ChIJm7oRy-tVZDURS9uIugCbJJE",
                    "name": "South Korea",
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            151.2125697,
                            -33.8487927
                        ]
                    },
                    "types": [
                        "country"
                    ]
                }
            ]
        }


### Remove a trip destination [DELETE /trips/{tripId}/destinations/{destinationId}]

Removes a destination from a trip. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID to get details for.
    + destinationId (string) - Destination ID in the trip.

+ Response 200 (application/json)

        {
            "message": "Trip destination deleted."
        }



## Trip Ideas [/trips/{tripId}/ideas]

Each trip contains a list of ideas, each of which is a place that the user wants to visit on the trip. The order of the ideas in the array dictates the order they'll be displayed to the user. Each trip only has one list of ideas. Users can add, remove, reorder, or move an idea to the trip plan.

Each trip idea includes the following properties:

* `_id` - Mongo ID
* `googlePlaceId` - Google Place ID
* `date` - Date created
* `name`
* `loc` - Location (Type and coordinates)
* `address`
* `phone`
* `types` - List of place types
* `photo` - URL for the primary photo for the place
* `url` - URL for the listing on Google
* `comment` - User comment about the idea


### Create a trip idea [POST]

Creates a new idea for the trip. Only allowed on a trip created by the currently authenticated user. The following properties are required to be provided for creation:

* `googlePlaceId`
* `name`
* `loc`
* `url`

+ Request (application/json)

        {
            "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
            "name": "Sydney Opera House",
            "loc": {
                "type": "Point",
                "coordinates": [
                    151.2152967,
                    -33.8567844
                ]
            },
            "address": "Bennelong Point, Sydney NSW 2000, Australia",
            "phone": "(02) 9250 7111",
            "types": [
                "point_of_interest",
                "establishment"
            ],
            "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
            "url": "https://maps.google.com/?cid=3545450935484072529",
            "comment": "Have to go here for any trip to Sydney"
        }

+ Response 302 (application/json)

        {
            "ideas": [
                {
                    "_id": "578edda250b26fc5d3c6bf22",
                    "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                    "date": "2016-07-29T07:27:02.451Z"
                    "name": "Sydney Opera House",
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            151.2152967,
                            -33.8567844
                        ]
                    },
                    "address": "Bennelong Point, Sydney NSW 2000, Australia",
                    "phone": "(02) 9250 7111",
                    "types": [
                        "point_of_interest",
                        "establishment"
                    ],
                    "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                    "url": "https://maps.google.com/?cid=3545450935484072529",
                    "comment": "Have to go here for any trip to Sydney"
                }
            ]
        }


### Get a trip's ideas [GET /trips/{tripId}/ideas?page={page}]

Returns the list of ideas from a trip, in reverse chronological order. Only allowed on trips created by the currently authenticated user. Returns 20 ideas at a time.

+ Parameters
    + tripId (string) - Trip ID
    + page (number) - Page # of results to return.

+ Response 200 (application/json)

        {
            "page": 1,
            "results": 2,
            "ideas": [
                {
                    "_id": "578edda250b26fc5d3c6bf22",
                    "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                    "date": "2016-07-29T07:27:02.451Z"
                    "name": "Sydney Opera House",
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            151.2152967,
                            -33.8567844
                        ]
                    },
                    "address": "Bennelong Point, Sydney NSW 2000, Australia",
                    "phone": "(02) 9250 7111",
                    "types": [
                        "point_of_interest",
                        "establishment"
                    ],
                    "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                    "url": "https://maps.google.com/?cid=3545450935484072529",
                    "comment": "Have to go here for any trip to Sydney"
                },
                {
                    "_id": "578edda250b26fc5d3c6bf35",
                    "googlePlaceId": "ChIJBa7IFYuuEmsRn7XUnfYcDC8",
                    "date": "2016-07-29T06:35:48.729Z"
                    "name": "Sydney Harbour Bridge",
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            151.2125697,
                            -33.8487927
                        ]
                    },
                    "address": "Sydney Harbour Bridge, Milsons Point NSW 2061, Australia",
                    "types": [
                        "route"
                    ],
                    "url": "https://maps.google.com/?q=Sydney+Harbour+Bridge,+Milsons+Point+NSW+2061,+Australia&ftid=0x6b12ae8b15c8ae05:0x2f0c1cf69dd4b59f"
                }
            ]
        }


### Delete a trip's ideas [DELETE]

Clears the list of ideas from a given trip. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID

+ Response 200 (application/json)

        {
            "message": "Trip ideas deleted."
        }


### Update a trip idea [PUT /trips/{tripId}/ideas/{ideaId}]

Updates an idea that belongs to a trip. Useful for reordering an idea in the list, marking an idea as "planned", or marking an idea back as "active". Only allowed on ideas whose trips are created by the currently authenticated user.

Users can update the order of an idea in the list or the comment.

+ Parameters
    + tripId (string) - Trip ID
    + ideaId (string) - Idea ID

+ Request (application/json)

        {
            "index": 0,
            "comment": "See if we can go with Shiv tomorrow."
        }

+ Response 200 (application/json)

        {
            "message": "Trip idea updated successfully.",
            "ideas": [
                {
                    "_id": "578edda250b26fc5d3c6bf22",
                    "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                    "date": "2016-07-29T07:27:02.451Z"
                    "name": "Sydney Opera House",
                    "loc": {
                        "type": "Point",
                        "coordinates": [
                            151.2152967,
                            -33.8567844
                        ]
                    },
                    "address": "Bennelong Point, Sydney NSW 2000, Australia",
                    "phone": "(02) 9250 7111",
                    "types": [
                        "point_of_interest",
                        "establishment"
                    ],
                    "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                    "url": "https://maps.google.com/?cid=3545450935484072529",
                    "comment": "See if we can go with Shiv tomorrow."
                }
            ]
        }


### Delete a trip idea [DELETE /trips/{tripId}/ideas/{ideaId}]

Removes an idea from a trip. Only allowed on ideas from trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID
    + ideaId (string) - Idea ID

+ Response 200 (application/json)

        {
            "message": "Trip idea deleted successfully."
        }



## Trip Plan [/trips/{tripId}/plan]

Each trip contains a plan, which keeps track of all the places users plan to visit during a trip. Each plan is made up of a series of trip days. Each day contains a list of trip entries - places users want to visit on that day. Users add entries to a specific day of the plan, and do so either by moving a Trip Idea into the Trip Plan, or directly into the plan.

To facilitate frequent back-and-forths between Trip Ideas and the Trip Plan, the backend will handle updating the state of an idea as users move it to the plan and back.

The below schemas make up a trip plan:

Trip Plan: Array of Trip Days. The index of the day in the array corresponds to the day # of the trip.

Trip Day:
* `_id` - Mongo ID
* `entries` - An array of Trip Entries
* `lodging` - subObject below, can be empty
  * `address` - optional
  * `googlePlaceId` - optional
  * `name` - optional
  * `loc` - Location (Type and coordinates), optional

The order of the items in the `entries` array determines the order the user intends to visit them during the day.

Trip Entry:
* `_id` - Mongo ID
* `googlePlaceId` - Google Place ID
* `date` - Date created
* `name` - Name of the place
* `loc` - Location (Type and coordinates)
* `address`
* `phone`
* `types` - List of place types
* `photo` - URL for the primary photo for the place
* `url` - URL for the listing on Google
* `status` - `planned` or `visited`. Defaults to `planned` on creation
* `comment` - User comment about the entry


### Get entire trip plan [GET]

+ Parameters
    + tripId (string) - Trip ID

+ Response 200 (application/json)

        {
            "tripId": "578edda250b26fc5d3c6bf22",
            "plan": [
                {
                    "_id": "578edda250b26fc5d3c6bb11",
                    "entries": [
                        {
                            "_id": "578edda250b26fc5d3c6bf28",
                            "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                            "date": "2016-07-29T07:27:02.451Z"
                            "name": "Sydney Opera House",
                            "loc": {
                                "type": "Point",
                                "coordinates": [
                                    151.2152967,
                                    -33.8567844
                                ]
                            },
                            "address": "Bennelong Point, Sydney NSW 2000, Australia",
                            "phone": "(02) 9250 7111",
                            "types": [
                                "point_of_interest",
                                "establishment"
                            ],
                            "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                            "url": "https://maps.google.com/?cid=3545450935484072529",
                            "status": "planned",
                            "comment": "See if we can go with Shiv tomorrow."
                        }
                    ],
                    "lodging": {}
                },
                {
                    "_id": "578edda250b26fc5d3c6bb17",
                    "entries": [],
                    "lodging": {}
                },
                {
                    "_id": "578edda250b26fc5d3c6bb62",
                    "entries": [],
                    "lodging": {}
                }
            ]
        }


### Get the plan for a trip day [GET /trips/{tripId}/plan/{dayId}]

Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID
    + dayId (string) - Trip Day ID

+ Response 200 (application/json)

        {
            "tripDay": {
                "_id": "578edda250b26fc5d3c6bb11",
                "entries": [
                    {
                        "_id": "578edda250b26fc5d3c6bf28",
                        "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                        "date": "2016-07-29T07:27:02.451Z"
                        "name": "Sydney Opera House",
                        "loc": {
                            "type": "Point",
                            "coordinates": [
                                151.2152967,
                                -33.8567844
                            ]
                        },
                        "address": "Bennelong Point, Sydney NSW 2000, Australia",
                        "phone": "(02) 9250 7111",
                        "types": [
                            "point_of_interest",
                            "establishment"
                        ],
                        "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                        "url": "https://maps.google.com/?cid=3545450935484072529",
                        "status": "planned",
                        "comment": "See if we can go with Shiv tomorrow."
                    }
                ],
                "lodging": {}
            },
        }


### Reorder a trip day [PUT /trips/{tripId}/plan/{dayId}]

Moves the plans for an entire day to another day, reordering the affected trip days in the process. Can only update the day # in this endpoint. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID
    + dayId (string) - Trip Day ID

+ Request (application/json)

        {
            "index": 0
        }

+ Response 200 (application/json)

        {
            "plan": [
                {
                    "_id": "578edda250b26fc5d3c6bb17",
                    "entries": [],
                    "lodging": {}
                },
                {
                    "_id": "578edda250b26fc5d3c6bb11",
                    "entries": [
                        {
                            "_id": "578edda250b26fc5d3c6bf28",
                            "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                            "date": "2016-07-29T07:27:02.451Z"
                            "name": "Sydney Opera House",
                            "loc": {
                                "type": "Point",
                                "coordinates": [
                                    151.2152967,
                                    -33.8567844
                                ]
                            },
                            "address": "Bennelong Point, Sydney NSW 2000, Australia",
                            "phone": "(02) 9250 7111",
                            "types": [
                                "point_of_interest",
                                "establishment"
                            ],
                            "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                            "url": "https://maps.google.com/?cid=3545450935484072529",
                            "status": "planned",
                            "comment": "See if we can go with Shiv tomorrow."
                        }
                    ],
                    "lodging": {}
                },
                {
                    "_id": "578edda250b26fc5d3c6bb62",
                    "entries": [],
                    "lodging": {}
                }
            ]
        }


### Create a new Trip Entry [POST /trips/{tripId}/plan/{dayId}]

A Trip Entry can be created either through a trip idea, or directly into the trip plan. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID
    + dayId (string) - Trip Day ID

+ Request (application/json)

        {
            "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
            "name": "Sydney Opera House",
            "loc": {
                "type": "Point",
                "coordinates": [
                    151.2152967,
                    -33.8567844
                ]
            },
            "address": "Bennelong Point, Sydney NSW 2000, Australia",
            "phone": "(02) 9250 7111",
            "types": [
                "point_of_interest",
                "establishment"
            ],
            "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
            "url": "https://maps.google.com/?cid=3545450935484072529",
            "status": "planned"
        }

+ Response 200 (application/json)

        {
            "dayId": "578edda250b26fc5d3c6bb11",
            "index": 0,
            "entry": {
                "_id": "578edda250b26fc5d3c6bf28",
                "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                "date": "2016-07-29T07:27:02.451Z"
                "name": "Sydney Opera House",
                "loc": {
                    "type": "Point",
                    "coordinates": [
                        151.2152967,
                        -33.8567844
                    ]
                },
                "address": "Bennelong Point, Sydney NSW 2000, Australia",
                "phone": "(02) 9250 7111",
                "types": [
                    "point_of_interest",
                    "establishment"
                ],
                "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                "url": "https://maps.google.com/?cid=3545450935484072529",
                "status": "planned"
            }
        }


### Edit a Trip Entry [PUT /trips/{tripId}/plan/{dayId}/entries/{entryId}]

Updates the state of a trip entry. Only allowed on trips created by the currently authenticated user. Can update the position of the entry in the list, the day that the entry belongs to, the status, and the comment. Example use cases include checking in at a place, reordering the entry, and moving the entry to another day.

+ Parameters
    + tripId (string) - Trip ID
    + dayId (string) - Trip Day ID
    + entryId (string) - Trip Entry ID

+ Request (application/json)

        {
            "dayId": "578edda250b26fc5d3c6bb17",
            "index": 0
        }

+ Response 200 (application/json)

        {
            "dayId": "578edda250b26fc5d3c6bb17",
            "index": 0,
            "entry": {
                "_id": "578edda250b26fc5d3c6bf28",
                "googlePlaceId": "ChIJ3S-JXmauEmsRUcIaWtf4MzE",
                "date": "2016-07-29T07:27:02.451Z"
                "name": "Sydney Opera House",
                "loc": {
                    "type": "Point",
                    "coordinates": [
                        151.2152967,
                        -33.8567844
                    ]
                },
                "address": "Bennelong Point, Sydney NSW 2000, Australia",
                "phone": "(02) 9250 7111",
                "types": [
                    "point_of_interest",
                    "establishment"
                ],
                "photo": "https://lh5.googleusercontent.com/-rlKEkZQ5hqA/VTS0B2sLp_I/AAAAAAAAH7U/w8ECgtHcpjA470l7hxfA2mDi8qKZrfG1Q/s1600-w500/",
                "url": "https://maps.google.com/?cid=3545450935484072529",
                "status": "planned"
            }
        }


### Delete a Trip Entry [DELETE /trips/{tripId}/plan/{dayId}/entries/{entryId}]

Removes a trip entry from a day's schedule. Only allowed on trips created by the currently authenticated user.

+ Parameters
    + tripId (string) - Trip ID
    + dayId (string) - Trip Day ID
    + entryId (string) - Trip Entry ID

+ Response 200 (application/json)

        {
            "message": "Trip entry deleted."
        }
